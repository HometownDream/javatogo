const e=JSON.parse('{"key":"v-74af1e0e","path":"/go/goBasic/15_goroutine%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91.html","title":"Golang goroutine channel 实现并发和并行","lang":"zh-CN","frontmatter":{"description":"为什么要使用goroutine呢 需求：要统计1-10000000的数字中那些是素数，并打印这些素数？ 素数：就是除了1和它本身不能被其他数整除的数 实现方法： 传统方法，通过一个for循环判断各个数是不是素数; 使用并发或者并行的方式，将统计素数的任务分配给多个goroutine去完成，这个时候就用到了goroutine; goroutine 结合 ...","head":[["meta",{"property":"og:url","content":"https://javatogo.site/go/goBasic/15_goroutine%E5%AE%9E%E7%8E%B0%E5%B9%B6%E8%A1%8C%E5%92%8C%E5%B9%B6%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"Java To Go"}],["meta",{"property":"og:title","content":"Golang goroutine channel 实现并发和并行"}],["meta",{"property":"og:description","content":"为什么要使用goroutine呢 需求：要统计1-10000000的数字中那些是素数，并打印这些素数？ 素数：就是除了1和它本身不能被其他数整除的数 实现方法： 传统方法，通过一个for循环判断各个数是不是素数; 使用并发或者并行的方式，将统计素数的任务分配给多个goroutine去完成，这个时候就用到了goroutine; goroutine 结合 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-23T05:06:11.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-23T05:06:11.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"为什么要使用goroutine呢","slug":"为什么要使用goroutine呢","link":"#为什么要使用goroutine呢","children":[]},{"level":2,"title":"进程、线程以及并行、并发","slug":"进程、线程以及并行、并发","link":"#进程、线程以及并行、并发","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"并发和并行","slug":"并发和并行","link":"#并发和并行","children":[]}]},{"level":2,"title":"Golang中协程（goroutine）以及主线程","slug":"golang中协程-goroutine-以及主线程","link":"#golang中协程-goroutine-以及主线程","children":[{"level":3,"title":"多协程和多线程","slug":"多协程和多线程","link":"#多协程和多线程","children":[]}]},{"level":2,"title":"goroutine的使用以及sync.WaitGroup","slug":"goroutine的使用以及sync-waitgroup","link":"#goroutine的使用以及sync-waitgroup","children":[{"level":3,"title":"并行执行需求","slug":"并行执行需求","link":"#并行执行需求","children":[]}]},{"level":2,"title":"设置Go并行运行的时候占用的cpu数量","slug":"设置go并行运行的时候占用的cpu数量","link":"#设置go并行运行的时候占用的cpu数量","children":[]},{"level":2,"title":"for循环开启多个协程","slug":"for循环开启多个协程","link":"#for循环开启多个协程","children":[]},{"level":2,"title":"Channel管道","slug":"channel管道","link":"#channel管道","children":[{"level":3,"title":"channel类型","slug":"channel类型","link":"#channel类型","children":[]},{"level":3,"title":"创建channel","slug":"创建channel","link":"#创建channel","children":[]},{"level":3,"title":"channel操作","slug":"channel操作","link":"#channel操作","children":[]}]},{"level":2,"title":"for range从管道循环取值","slug":"for-range从管道循环取值","link":"#for-range从管道循环取值","children":[]},{"level":2,"title":"Goroutine 结合 channel 管道","slug":"goroutine-结合-channel-管道","link":"#goroutine-结合-channel-管道","children":[]},{"level":2,"title":"goroutine 结合 channel打印素数","slug":"goroutine-结合-channel打印素数","link":"#goroutine-结合-channel打印素数","children":[]},{"level":2,"title":"单向管道","slug":"单向管道","link":"#单向管道","children":[]},{"level":2,"title":"Select多路复用","slug":"select多路复用","link":"#select多路复用","children":[]},{"level":2,"title":"Goroutine Recover解决协程中出现的Panic","slug":"goroutine-recover解决协程中出现的panic","link":"#goroutine-recover解决协程中出现的panic","children":[]},{"level":2,"title":"Go中的并发安全和锁","slug":"go中的并发安全和锁","link":"#go中的并发安全和锁","children":[{"level":3,"title":"互斥锁","slug":"互斥锁","link":"#互斥锁","children":[]},{"level":3,"title":"读写互斥锁","slug":"读写互斥锁","link":"#读写互斥锁","children":[]}]}],"git":{"createdTime":1671771971000,"updatedTime":1671771971000,"contributors":[{"name":"zyk","email":"778268716@qq.com","commits":1}]},"readingTime":{"minutes":14.4,"words":4320},"filePathRelative":"go/goBasic/15_goroutine实现并行和并发.md","localizedDate":"2022年12月23日"}');export{e as data};
