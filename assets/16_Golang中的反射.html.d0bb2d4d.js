const e=JSON.parse('{"key":"v-7c066746","path":"/go/goBasic/16_Golang%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84.html","title":"Go中的反射","lang":"zh-CN","frontmatter":{"description":"反射 有时我们需要写一个函数，这个函数有能力统一处理各种值类型，而这些类型可能无法共享同一个接口，也可能布局未知，也有可能这个类型在我们设计函数时还不存在，这个时候我们就可以用到反射。 空接口可以存储任意类型的变量，那我们如何知道这个空接口保存数据的类型是什么？ 值是什么呢？ 可以使用类型断言; 可以使用反射实现，也就是在程序运行时动态的获取一个变量的...","head":[["meta",{"property":"og:url","content":"https://javatogo.site/go/goBasic/16_Golang%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84.html"}],["meta",{"property":"og:site_name","content":"Java To Go"}],["meta",{"property":"og:title","content":"Go中的反射"}],["meta",{"property":"og:description","content":"反射 有时我们需要写一个函数，这个函数有能力统一处理各种值类型，而这些类型可能无法共享同一个接口，也可能布局未知，也有可能这个类型在我们设计函数时还不存在，这个时候我们就可以用到反射。 空接口可以存储任意类型的变量，那我们如何知道这个空接口保存数据的类型是什么？ 值是什么呢？ 可以使用类型断言; 可以使用反射实现，也就是在程序运行时动态的获取一个变量的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-23T05:06:11.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-23T05:06:11.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":2,"title":"反射的基本介绍","slug":"反射的基本介绍","link":"#反射的基本介绍","children":[]},{"level":2,"title":"Go可以实现的功能","slug":"go可以实现的功能","link":"#go可以实现的功能","children":[]},{"level":2,"title":"reflect.TypeOf()获取任意值的类型对象","slug":"reflect-typeof-获取任意值的类型对象","link":"#reflect-typeof-获取任意值的类型对象","children":[]},{"level":2,"title":"type name 和 type Kind","slug":"type-name-和-type-kind","link":"#type-name-和-type-kind","children":[]},{"level":2,"title":"reflect.ValueOf","slug":"reflect-valueof","link":"#reflect-valueof","children":[]},{"level":2,"title":"结构体反射","slug":"结构体反射","link":"#结构体反射","children":[{"level":3,"title":"与结构体相关的方法","slug":"与结构体相关的方法","link":"#与结构体相关的方法","children":[]}]}],"git":{"createdTime":1671771971000,"updatedTime":1671771971000,"contributors":[{"name":"zyk","email":"778268716@qq.com","commits":1}]},"readingTime":{"minutes":6.67,"words":2001},"filePathRelative":"go/goBasic/16_Golang中的反射.md","localizedDate":"2022年12月23日"}');export{e as data};
