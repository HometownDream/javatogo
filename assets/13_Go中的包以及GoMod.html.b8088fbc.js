import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as i,c as p,a as n,e as s,b as e,d as o,r as l}from"./app.fec28137.js";const c={},d=n("h1",{id:"go中的包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#go中的包","aria-hidden":"true"},"#"),s(" Go中的包")],-1),r=n("h2",{id:"go中的包的介绍和定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#go中的包的介绍和定义","aria-hidden":"true"},"#"),s(" Go中的包的介绍和定义")],-1),u=n("p",null,"包（package）是多个Go源码的集合，是一种高级的代码复用方案，Go语言为我们提供了很多内置包，如fmt、strconv、strings、sort、errors、time、encoding/json、os、io等。",-1),m=n("p",null,"Golang中的包可以分为三种：1、系统内置包 2、自定义包 3、第三方包",-1),g=n("li",null,[n("strong",null,"系统内置包"),s("：Golang 语言给我们提供的内置包，引入后可以直接使用，如fmt、strconv、strings、sort、errors、time、encoding/json、os、io等。")],-1),v=n("li",null,[n("strong",null,"自定义包"),s("：开发者自己写的包")],-1),k=n("strong",null,"第三方包",-1),h={href:"http://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},b=o(`<h2 id="go包管理工具-go-mod" tabindex="-1"><a class="header-anchor" href="#go包管理工具-go-mod" aria-hidden="true">#</a> Go包管理工具 go mod</h2><p>在Golang1.11版本之前如果我们要自定义包的话必须把项目放在GOPATH目录。Go1.11版本之后无需手动配置环境变量，使用go mod 管理项目，也不需要非得把项目放到GOPATH指定目录下，你可以在你磁盘的任何位置新建一个项目，Go1.13以后可以彻底不要GOPATH了。</p><h3 id="go-mod-init初始化项目" tabindex="-1"><a class="header-anchor" href="#go-mod-init初始化项目" aria-hidden="true">#</a> go mod init初始化项目</h3><p>实际项目开发中我们首先要在我们项目目录中用go mod命令生成一个go.mod文件管理我们项目的依赖。</p><p>比如我们的golang项目文件要放在了itying这个文件夹，这个时候我们需要在itying文件夹里面使用go mod命令生成一个go.mod文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go mod init goProject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/HometownDream/blogImage@main/imgJavaToGo202212221436467.png" alt="image-20200722160717988"></p><p>然后会生成一个 go.mod 的文件，里面的内容是go版本，以及以后添加的包</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>module goProject

<span class="token keyword">go</span> <span class="token number">1.14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="引入其它项目的包" tabindex="-1"><a class="header-anchor" href="#引入其它项目的包" aria-hidden="true">#</a> 引入其它项目的包</h3><p>首先我们创建一个 calc，然后里面有一个calc的文件</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> calc

<span class="token comment">// 自定义包，最好和文件夹统一起来</span>

<span class="token comment">// 公有变量</span>
<span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">10</span>
<span class="token comment">// 私有变量</span>
<span class="token keyword">var</span> Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span>

<span class="token comment">// 首字母大写，表示共有方法</span>
<span class="token keyword">func</span> <span class="token function">Add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token builtin">int</span>  <span class="token punctuation">{</span>
	<span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">Sub</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token builtin">int</span>  <span class="token punctuation">{</span>
	<span class="token keyword">return</span> x <span class="token operator">-</span> y
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在其它地方需要引用的话，就是这样</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;goProject/calc&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="golang中自定义包" tabindex="-1"><a class="header-anchor" href="#golang中自定义包" aria-hidden="true">#</a> Golang中自定义包</h2><p>包（package）是多个Go源码的集合，一个包可以简单理解为一个存放多个.go文件的文件夹。该文件夹下面的所有go文件都要在代码的第一行添加如下代码，声明该文件归属的包。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> 包名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意事项</strong></p><ul><li>一个文件夹下面直接包含的文件只能归属一个package，同样一个package的文件不能在多个文件夹下。</li><li>包名可以不和文件夹的名字一样，包名不能包含-符号。</li><li>包名为main的包为应用程序的入口包，这种包编译后会得到一个可执行文件，而编译不包含main包的源代码则不会得到可执行文件。</li></ul><h2 id="go中init-初始化函数" tabindex="-1"><a class="header-anchor" href="#go中init-初始化函数" aria-hidden="true">#</a> Go中init()初始化函数</h2><h3 id="init函数介绍" tabindex="-1"><a class="header-anchor" href="#init函数介绍" aria-hidden="true">#</a> init函数介绍</h3><p>在Go 语言程序执行时导入包语句会自动触发包内部init（）函数的调用。需要注意的是：init（） 函数没有参数也没有返回值。init（）函数在程序运行时自动被调用执行，不能在代码中主动调用它。 包初始化执行的顺序如下图所示：</p><p>包初始化执行的顺序如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/HometownDream/blogImage@main/imgJavaToGo202212221436468.png" alt="image-20200722192813667"></p><h3 id="init函数执行顺序" tabindex="-1"><a class="header-anchor" href="#init函数执行顺序" aria-hidden="true">#</a> init函数执行顺序</h3><p>Go语言包会从main包开始检查其导入的所有包，每个包中又可能导入了其他的包。Go编译器由此构建出一个树状的包引用关系，再根据引用顺序决定编译顺序，依次编译这些包的代码。</p><p>在运行时，被最后导入的包会最先初始化并调用其init（）函数，如下图示：</p><p><img src="https://cdn.jsdelivr.net/gh/HometownDream/blogImage@main/imgJavaToGo202212221436469.png" alt="image-20200722192933448"></p><p>也就是父类中的init先执行</p><h2 id="go中的第三方包" tabindex="-1"><a class="header-anchor" href="#go中的第三方包" aria-hidden="true">#</a> Go中的第三方包</h2>`,30),f={href:"https://pkg.go.dev/",target:"_blank",rel:"noopener noreferrer"},_=o(`<p>例如，前面找到前面我们需要下载的第三方包的地址</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://github.com/shopspring/decimal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后安装这个包</p><h3 id="方法1-go-get-包全名-全局" tabindex="-1"><a class="header-anchor" href="#方法1-go-get-包全名-全局" aria-hidden="true">#</a> 方法1：go get 包全名 （全局）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get github.com/shopspring/decimal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="方法2-go-mod-download-全局" tabindex="-1"><a class="header-anchor" href="#方法2-go-mod-download-全局" aria-hidden="true">#</a> 方法2：go mod download （全局）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go mod download
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>依赖包会自动下载到 $GOPATH/pkg/mod目录，并且多个项目可以共享缓存的mod，注意使用go mod download的时候，需要首先在你的项目中引入第三方包</p><h3 id="方法3-go-mod-vendor-将依赖复制到当前项目的vendor-本项目" tabindex="-1"><a class="header-anchor" href="#方法3-go-mod-vendor-将依赖复制到当前项目的vendor-本项目" aria-hidden="true">#</a> 方法3：go mod vendor 将依赖复制到当前项目的vendor（本项目）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go mod vendor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将依赖复制到当前项目的vendor下</p><p>注意：使用go mod vendor的时候，首先需要在你的项目里面引入第三方包</p><h3 id="go-mod常见命令" tabindex="-1"><a class="header-anchor" href="#go-mod常见命令" aria-hidden="true">#</a> go mod常见命令</h3><ul><li>go download：下载依赖的module到本地cache</li><li>go edit：编辑go.mod文件</li><li>go graph：打印模块依赖图</li><li>go init：在当前文件夹下初始化一个新的module，创建go.mod文件</li><li>tidy：增加丢失的module，去掉未使用的module</li><li>vendor：将依赖复制到vendor下</li><li>verify：校验依赖，检查下载的第三方库有没有本地修改，如果有修改，则会返回非0，否则校验成功</li></ul><h2 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h2>`,15),x={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},w=o(`<p>然后在我们的项目中引入</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/shopspring/decimal&quot;</span>
	<span class="token string">&quot;goProject/calc&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v \\n&quot;</span><span class="token punctuation">,</span> calc<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token comment">// 打印公有变量</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>calc<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>

	<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> decimal<span class="token punctuation">.</span><span class="token function">NewFromString</span><span class="token punctuation">(</span><span class="token string">&quot;136.02&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引入后，我们运行项目，就会去下载了，下载完成后，我们到 go.mod文件夹，能够看到依赖被引入了</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>module goProject

<span class="token keyword">go</span> <span class="token number">1.14</span>

require github<span class="token punctuation">.</span>com<span class="token operator">/</span>shopspring<span class="token operator">/</span>decimal v1<span class="token punctuation">.</span><span class="token number">2.0</span> <span class="token comment">// indirect</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时还生成了一个 go.sum文件</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>github<span class="token punctuation">.</span>com<span class="token operator">/</span>shopspring<span class="token operator">/</span>decimal v1<span class="token punctuation">.</span><span class="token number">2.0</span> h1<span class="token punctuation">:</span>abSATXmQEYyShuxI4<span class="token operator">/</span>vyW3tV1MrKAJzCZ<span class="token operator">/</span>0zLUXYbsQ<span class="token operator">=</span>
github<span class="token punctuation">.</span>com<span class="token operator">/</span>shopspring<span class="token operator">/</span>decimal v1<span class="token punctuation">.</span><span class="token number">2.0</span><span class="token operator">/</span><span class="token keyword">go</span><span class="token punctuation">.</span>mod h1<span class="token punctuation">:</span>DKyhrW<span class="token operator">/</span>HYNuLGql<span class="token operator">+</span>MJL6WCR6knT2jwCFRcu2hWCYk4o<span class="token operator">=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就可以使用第三包开始具体的使用了~，我们实现一个Float类型的加法</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/shopspring/decimal&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> num1 <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token number">3.1</span>
	<span class="token keyword">var</span> num2 <span class="token builtin">float64</span> <span class="token operator">=</span> <span class="token number">4.2</span>
	d1 <span class="token operator">:=</span> decimal<span class="token punctuation">.</span><span class="token function">NewFromFloat</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>decimal<span class="token punctuation">.</span><span class="token function">NewFromFloat</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整案例" tabindex="-1"><a class="header-anchor" href="#完整案例" aria-hidden="true">#</a> 完整案例</h2><h3 id="寻找依赖" tabindex="-1"><a class="header-anchor" href="#寻找依赖" aria-hidden="true">#</a> 寻找依赖</h3>`,10),q={href:"https://pkg.go.dev/",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,[n("img",{src:"https://cdn.jsdelivr.net/gh/HometownDream/blogImage@main/imgJavaToGo202212221436470.png",alt:"image-20200722200404713"})],-1),G=n("p",null,"然后我们搜索gJson的包，这个包主要是用于json相关的操作",-1),j=n("p",null,[n("img",{src:"https://cdn.jsdelivr.net/gh/HometownDream/blogImage@main/imgJavaToGo202212221436471.png",alt:"image-20200722200455221"})],-1),E={href:"https://github.com/tidwall/gjson%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8F%90%E4%BE%9B%E4%BA%86%E5%AE%8C%E6%95%B4%E7%9A%84%E6%95%99%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},A=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载依赖</span>
go get <span class="token parameter variable">-u</span> github.com/tidwall/gjson
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;github.com/tidwall/gjson&quot;</span>

<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token string">\`{&quot;name&quot;:{&quot;first&quot;:&quot;Janet&quot;,&quot;last&quot;:&quot;Prichard&quot;},&quot;age&quot;:47}\`</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	value <span class="token operator">:=</span> gjson<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token string">&quot;name.last&quot;</span><span class="token punctuation">)</span>
	<span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function P(T,B){const a=l("ExternalLinkIcon");return i(),p("div",null,[d,r,u,m,n("ul",null,[g,v,n("li",null,[k,s('：属于自定义包的一种，需要下载安装到本地后才可以使用，如前面给大家介绍的 "'),n("a",h,[s("github.com/shopspring/decimal"),e(a)]),s('"包解决float精度丢失问题。')])]),b,n("p",null,[s("我们可以在 "),n("a",f,[s("https://pkg.go.dev/"),e(a)]),s(" 查找看常见的golang第三方包")]),_,n("p",null,[s("首先我们先去官网找到这个包，"),n("a",x,[s("https://github.com/shopspring/decimal"),e(a)])]),w,n("p",null,[s("首先我们需要去 "),n("a",q,[s("依赖官网"),e(a)]),s("，类似于我们的 maven repository")]),y,G,j,n("p",null,[s("我们进去后，找到它的"),n("a",E,[s("https://github.com/tidwall/gjson，然后提供了完整的教程"),e(a)])]),A])}const F=t(c,[["render",P],["__file","13_Go中的包以及GoMod.html.vue"]]);export{F as default};
