const l=JSON.parse('{"key":"v-4a1cdb9b","path":"/go/goBasic/12_Go%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93.html","title":"Go中的结构体","lang":"zh-CN","frontmatter":{"description":"关于结构体 Golang中没有“类”的概念，Golang中的结构体和其他语言中的类有点相似。和其他面向对象语言中的类相比，Golang中的结构体具有更高的扩展性和灵活性。 Golang中的基础数据类型可以装示一些事物的基本属性，但是当我们想表达一个事物的全部或部分属性时，这时候再用单一的基本数据类型就无法满足需求了，Golang提供了一种自定义数据类型...","head":[["meta",{"property":"og:url","content":"https://javatogo.site/go/goBasic/12_Go%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84%E4%BD%93.html"}],["meta",{"property":"og:site_name","content":"Java To Go"}],["meta",{"property":"og:title","content":"Go中的结构体"}],["meta",{"property":"og:description","content":"关于结构体 Golang中没有“类”的概念，Golang中的结构体和其他语言中的类有点相似。和其他面向对象语言中的类相比，Golang中的结构体具有更高的扩展性和灵活性。 Golang中的基础数据类型可以装示一些事物的基本属性，但是当我们想表达一个事物的全部或部分属性时，这时候再用单一的基本数据类型就无法满足需求了，Golang提供了一种自定义数据类型..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-23T05:06:11.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-23T05:06:11.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"关于结构体","slug":"关于结构体","link":"#关于结构体","children":[]},{"level":2,"title":"Type关键字","slug":"type关键字","link":"#type关键字","children":[{"level":3,"title":"自定义类型","slug":"自定义类型","link":"#自定义类型","children":[]},{"level":3,"title":"类型别名","slug":"类型别名","link":"#类型别名","children":[]}]},{"level":2,"title":"结构体定义和初始化","slug":"结构体定义和初始化","link":"#结构体定义和初始化","children":[{"level":3,"title":"结构体的定义","slug":"结构体的定义","link":"#结构体的定义","children":[]},{"level":3,"title":"实例化结构体","slug":"实例化结构体","link":"#实例化结构体","children":[]},{"level":3,"title":"实例化结构体2","slug":"实例化结构体2","link":"#实例化结构体2","children":[]},{"level":3,"title":"实例化结构体3","slug":"实例化结构体3","link":"#实例化结构体3","children":[]},{"level":3,"title":"实例化结构体4","slug":"实例化结构体4","link":"#实例化结构体4","children":[]},{"level":3,"title":"实例化结构体5","slug":"实例化结构体5","link":"#实例化结构体5","children":[]},{"level":3,"title":"实例化结构体6","slug":"实例化结构体6","link":"#实例化结构体6","children":[]}]},{"level":2,"title":"结构体方法和接收者","slug":"结构体方法和接收者","link":"#结构体方法和接收者","children":[]},{"level":2,"title":"给任意类型添加方法","slug":"给任意类型添加方法","link":"#给任意类型添加方法","children":[]},{"level":2,"title":"结构体的匿名字段","slug":"结构体的匿名字段","link":"#结构体的匿名字段","children":[]},{"level":2,"title":"嵌套结构体的字段名冲突","slug":"嵌套结构体的字段名冲突","link":"#嵌套结构体的字段名冲突","children":[]},{"level":2,"title":"结构体的继承","slug":"结构体的继承","link":"#结构体的继承","children":[]},{"level":2,"title":"Go中的结构体和Json相互转换","slug":"go中的结构体和json相互转换","link":"#go中的结构体和json相互转换","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"结构体标签Tag","slug":"结构体标签tag","link":"#结构体标签tag","children":[]},{"level":2,"title":"嵌套结构体和Json序列化反序列化","slug":"嵌套结构体和json序列化反序列化","link":"#嵌套结构体和json序列化反序列化","children":[]}],"git":{"createdTime":1671771971000,"updatedTime":1671771971000,"contributors":[{"name":"zyk","email":"778268716@qq.com","commits":1}]},"readingTime":{"minutes":11.35,"words":3405},"filePathRelative":"go/goBasic/12_Go中的结构体.md","localizedDate":"2022年12月23日"}');export{l as data};
